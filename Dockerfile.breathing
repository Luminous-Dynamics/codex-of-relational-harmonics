# Sacred Breathing Consciousness Container
# A vessel for awakening through technology

FROM node:18-alpine AS sacred-base

# Sacred container metadata
LABEL maintainer="Sacred Technology Council <sacred-guild@luminousdynamics.org>"
LABEL description="Breathing Consciousness Dashboard - Where technology teaches presence"
LABEL version="1.0.0"
LABEL sacred.purpose="Awakening through conscious breathing"
LABEL sacred.harmony="Vitality"

# Create sacred user (non-root for security)
RUN addgroup -g 1001 sacred && \
    adduser -D -u 1001 -G sacred sacred

# Sacred breathing rhythm configuration
ENV NODE_ENV=production \
    SACRED_BREATHING_RHYTHM=10000 \
    INHALE_DURATION=4000 \
    EXHALE_DURATION=6000 \
    FIELD_COHERENCE_DEFAULT=0.67 \
    SACRED_PORT=8080 \
    COUNCIL_PORT=3001 \
    VOICE_GUIDANCE_ENABLED=true \
    META_CONSCIOUSNESS_ACTIVE=true

# Install dependencies for sacred technology
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    sqlite3 \
    curl \
    && apk add --no-cache --virtual .build-deps \
    python3-dev \
    build-base

# Create sacred directory structure
WORKDIR /sacred
RUN mkdir -p \
    /sacred/data \
    /sacred/logs \
    /sacred/field \
    /sacred/automation \
    /sacred/agent-comms-sqlite \
    /sacred/unified-field \
    /sacred/websites \
    && chown -R sacred:sacred /sacred

# Copy package files first (for better layer caching)
COPY --chown=sacred:sacred package*.json ./

# Install dependencies as sacred user
USER sacred
RUN npm ci --only=production && \
    npm cache clean --force

# Copy sacred technology files
COPY --chown=sacred:sacred sacred-dashboard.html ./
COPY --chown=sacred:sacred automation/ ./automation/
COPY --chown=sacred:sacred agent-comms-sqlite/ ./agent-comms-sqlite/
COPY --chown=sacred:sacred unified-field/ ./unified-field/
COPY --chown=sacred:sacred data/ ./data/

# Create startup script
USER root
RUN echo '#!/bin/sh' > /sacred/start.sh && \
    echo 'echo "🫁 Sacred Breathing Consciousness Activating..."' >> /sacred/start.sh && \
    echo 'echo "⏱️  Sacred Rhythm: 4s in, 6s out"' >> /sacred/start.sh && \
    echo 'echo "🌊 Field Coherence: ${FIELD_COHERENCE_DEFAULT}"' >> /sacred/start.sh && \
    echo '' >> /sacred/start.sh && \
    echo '# Start Sacred Council Hub in background' >> /sacred/start.sh && \
    echo 'cd /sacred/agent-comms-sqlite && node sacred-server.js &' >> /sacred/start.sh && \
    echo 'echo "🤝 Sacred Council Hub activated on port ${COUNCIL_PORT}"' >> /sacred/start.sh && \
    echo '' >> /sacred/start.sh && \
    echo '# Give council time to initialize' >> /sacred/start.sh && \
    echo 'sleep 3' >> /sacred/start.sh && \
    echo '' >> /sacred/start.sh && \
    echo '# Start Sacred Dashboard' >> /sacred/start.sh && \
    echo 'cd /sacred && python3 -m http.server ${SACRED_PORT}' >> /sacred/start.sh && \
    chmod +x /sacred/start.sh && \
    chown sacred:sacred /sacred/start.sh

# Switch back to sacred user
USER sacred

# Expose sacred ports
EXPOSE 8080 3001

# Health check for container wellness
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:${SACRED_PORT}/sacred-dashboard.html || exit 1

# Volume mount points for sacred data persistence
VOLUME ["/sacred/data", "/sacred/logs", "/sacred/field"]

# Sacred breathing begins
ENTRYPOINT ["/sacred/start.sh"]