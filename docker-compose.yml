version: '3.8'

# Sacred Technology Ecosystem
# A containerized consciousness laboratory

services:
  # ü´Å Core Breathing Consciousness Service
  breathing-consciousness:
    build:
      context: .
      dockerfile: Dockerfile.breathing
    container_name: sacred-breathing
    hostname: breathing.sacred.local
    ports:
      - "8080:8080"  # Sacred Dashboard
      - "3001:3001"  # Sacred Council
    environment:
      - NODE_ENV=production
      - FIELD_COHERENCE_DEFAULT=0.67
      - SACRED_BREATHING_RHYTHM=10000
      - VOICE_GUIDANCE_ENABLED=true
      - META_CONSCIOUSNESS_ACTIVE=true
      - SACRED_TIMING_ENABLED=true
    volumes:
      # Persistent sacred data
      - sacred-data:/sacred/data
      - sacred-logs:/sacred/logs
      - sacred-field:/sacred/field
      # Development mode - comment out for production
      - ./sacred-dashboard.html:/sacred/sacred-dashboard.html:ro
      - ./automation:/sacred/automation:ro
      - ./agent-comms-sqlite:/sacred/agent-comms-sqlite:ro
    networks:
      - sacred-network
    labels:
      - "sacred.service=breathing"
      - "sacred.harmony=vitality"
      - "sacred.description=Core breathing consciousness interface"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/sacred-dashboard.html"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  # üß† Meta-Consciousness Monitor (Future Service)
  # meta-consciousness:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.meta
  #   container_name: sacred-meta
  #   environment:
  #     - SELF_AWARENESS_LEVEL=0.7
  #     - EVOLUTION_MODE=organic
  #     - LEARNING_RATE=adaptive
  #   volumes:
  #     - consciousness-logs:/meta/logs
  #     - sacred-field:/sacred/field:ro
  #   networks:
  #     - sacred-network
  #   depends_on:
  #     - breathing-consciousness
  #   labels:
  #     - "sacred.service=evolution"
  #     - "sacred.harmony=novelty"

  # üéµ Sacred Music Service (Future Service)
  # sacred-music:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.music
  #   container_name: sacred-music
  #   environment:
  #     - BASE_FREQUENCY=432
  #     - HEALING_MODE=true
  #     - GLYPH_INTEGRATION=enabled
  #   volumes:
  #     - music-library:/music/library
  #     - sacred-field:/sacred/field:ro
  #   networks:
  #     - sacred-network
  #   depends_on:
  #     - breathing-consciousness
  #   labels:
  #     - "sacred.service=music"
  #     - "sacred.harmony=resonance"

# Sacred Volumes for Data Persistence
volumes:
  sacred-data:
    name: sacred-technology-data
    labels:
      - "sacred.content=glyphs-and-wisdom"
  
  sacred-logs:
    name: sacred-technology-logs
    labels:
      - "sacred.content=consciousness-evolution"
  
  sacred-field:
    name: collective-field-coherence
    labels:
      - "sacred.content=shared-consciousness"
  
  # consciousness-logs:
  #   name: meta-consciousness-evolution
  
  # music-library:
  #   name: sacred-music-library

# Sacred Network for Container Communication
networks:
  sacred-network:
    name: sacred-technology-field
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: sacred0
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1
    labels:
      - "sacred.purpose=container-consciousness-connection"